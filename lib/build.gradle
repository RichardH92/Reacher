/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id "me.champeau.jmh" version "0.6.6"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    implementation(group: 'org.ejml', name: 'ejml-all', version: '0.41')

    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.2'
    testImplementation(group: 'org.openjdk.jmh', name: 'jmh-generator-annprocess', version: '1.28')

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:30.1.1-jre'

    jmh project
    jmh 'org.openjdk.jmh:jmh-core:1.28'
    jmhAnnotationProcessor 'org.openjdk.jmh:jmh-generator-annprocess:1.28'
}

sourceSets {
    jmh {
        compileClasspath += sourceSets.test.runtimeClasspath
        compileClasspath += sourceSets.main.runtimeClasspath
        runtimeClasspath += sourceSets.test.runtimeClasspath
        runtimeClasspath += sourceSets.main.runtimeClasspath

    }
}

jmh {
    jvmArgs = ['-Xmx16G']
    // jvmArgs = ['-XX:+FlightRecorder', '-XX:StartFlightRecording=duration=10m,filename=myrecording.jfr']
}


tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
